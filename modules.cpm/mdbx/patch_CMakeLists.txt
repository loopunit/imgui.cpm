cmake_minimum_required(VERSION "3.14")

project(libmdbx VERSION 0.9)

set(MDBX_VERSION_MAJOR 0)
set(MDBX_VERSION_MINOR 9)
set(MDBX_VERSION_RELEASE 0)
set(MDBX_VERSION_REVISION 0)
set(MDBX_GIT_TIMESTAMP 0)
set(MDBX_GIT_TREE 0)
set(MDBX_GIT_COMMIT 0)
set(MDBX_GIT_DESCRIBE 0)
set(MDBX_BUILD_SOURCERY MDBX_BUILD_SOURCERY)
set(MDBX_BUILD_FLAGS MDBX_BUILD_FLAGS)

option(MDBX_BUILD_TOOLS "MDBX_BUILD_TOOLS" ON)

# FIX: O2 hangs the build in msvc 19.x
string(REPLACE "/O2" "/Od" CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE}")
string(REPLACE "/O2" "/Od" CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE}")

configure_file("${CMAKE_CURRENT_LIST_DIR}/src/version.c.in"
	"${CMAKE_CURRENT_BINARY_DIR}/version.c" ESCAPE_QUOTES)

configure_file("${CMAKE_CURRENT_LIST_DIR}/src/config.h.in"
  "${CMAKE_CURRENT_BINARY_DIR}/config.h" ESCAPE_QUOTES)

add_library(mdbx STATIC   
  "${CMAKE_CURRENT_BINARY_DIR}/version.c"
  "${CMAKE_CURRENT_BINARY_DIR}/config.h"
  "${CMAKE_CURRENT_LIST_DIR}/mdbx.h"
  "${CMAKE_CURRENT_LIST_DIR}/mdbx.h++"
  "${CMAKE_CURRENT_LIST_DIR}/src/options.h" 
  "${CMAKE_CURRENT_LIST_DIR}/src/defs.h"
  "${CMAKE_CURRENT_LIST_DIR}/src/internals.h" 
  "${CMAKE_CURRENT_LIST_DIR}/src/osal.h"
  "${CMAKE_CURRENT_LIST_DIR}/src/core.c" 
  "${CMAKE_CURRENT_LIST_DIR}/src/osal.c"
  "${CMAKE_CURRENT_LIST_DIR}/src/lck-posix.c" 
  "${CMAKE_CURRENT_LIST_DIR}/src/lck-windows.c"
  "${CMAKE_CURRENT_LIST_DIR}/src/mdbx.c++")

file(GLOB MDBX_PUBLIC_HEADERS
        "${CMAKE_CURRENT_LIST_DIR}/mdbx.h"
        "${CMAKE_CURRENT_LIST_DIR}/mdbx.h++")

set_property(TARGET mdbx PROPERTY CXX_STANDARD 17)
set_property(TARGET mdbx PROPERTY CXX_STANDARD_REQUIRED ON)

target_compile_definitions(mdbx 
    PUBLIC
        MDBX_VERSION_MAJOR=${MDBX_VERSION_MAJOR}
        MDBX_VERSION_MINOR=${MDBX_VERSION_MINOR}
    PRIVATE 
        MDBX_BUILD_SOURCERY=${MDBX_BUILD_SOURCERY}
        MDBX_BUILD_SHARED_LIBRARY=0 
        MDBX_CONFIG_H="config.h")

target_include_directories(mdbx 
    PRIVATE 
        "${CMAKE_CURRENT_LIST_DIR}/src" 
        ${CMAKE_CURRENT_BINARY_DIR})

if(${CMAKE_SYSTEM_NAME} STREQUAL "Windows")
	target_link_libraries(mdbx 
        PUBLIC 
            ntdll.lib)
elseif(${CMAKE_SYSTEM_NAME} STREQUAL "SunOS" OR ${CMAKE_SYSTEM_NAME} STREQUAL "Solaris")
	target_link_libraries(mdbx 
        PUBLIC 
            kstat)
elseif(${CMAKE_SYSTEM_NAME} STREQUAL "Android")
	target_link_libraries(mdbx 
        PUBLIC 
            log)
endif()

install(TARGETS mdbx
    LIBRARY DESTINATION lib)

install(FILES ${MDBX_PUBLIC_HEADERS}
    DESTINATION include)

if(MDBX_BUILD_TOOLS)
  if(${CMAKE_SYSTEM_NAME} STREQUAL "Windows")
    set(WINGETOPT_SRC 
        "${CMAKE_CURRENT_LIST_DIR}/src/wingetopt.c" 
        "${CMAKE_CURRENT_LIST_DIR}/src/wingetopt.h")
  endif()

  foreach(TOOL mdbx_chk mdbx_copy mdbx_stat mdbx_dump mdbx_load)
    add_executable(${TOOL} mdbx.h "${CMAKE_CURRENT_LIST_DIR}/src/${TOOL}.c" ${WINGETOPT_SRC})
    
    target_link_libraries(${TOOL} mdbx)
    
    set_target_properties(${TOOL} PROPERTIES CXX_STANDARD 17)

    install(TARGETS ${TOOL}
        RUNTIME DESTINATION bin)
  endforeach()
endif()

